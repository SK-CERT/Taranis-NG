FROM python:3.13-alpine3.20 AS build_shared

WORKDIR /build_shared/

RUN pip install --no-cache-dir build
COPY ./src/shared/. .
RUN python -m build

RUN apk add --no-cache  \
    gcc \
    build-base\
    libc-dev\
    linux-headers

COPY ./src/core/sse/forward.c .

RUN gcc -o forward forward.c


FROM python:3.13-alpine3.20 AS production

WORKDIR /app/

# upgrade pip
RUN python -m pip install --upgrade pip

# install common packages
RUN \
    apk add --no-cache \
    postgresql-libs \
    libpq \
    curl \
    openssl

# install "shared" package from build_shared stage
# TODO: somehow squash the following two layers into one to conserve space

COPY --from=build_shared /build_shared/dist/taranis_ng_shared-*.whl custom_packages/
RUN pip install --no-cache-dir ./custom_packages/taranis_ng_shared-*.whl && rm -rf ./custom_packages/

# install other dependencies

COPY ./src/core/requirements.txt /app/requirements.txt
RUN \
    apk add --no-cache --virtual .build-deps \
    gcc \
    g++ \
    git \
    build-base\
    libc-dev\
    zlib-dev \
    linux-headers \
    make \
    glib-dev \
    musl-dev \
    python3-dev \
    libffi-dev \
    postgresql-dev && \
    pip install --no-cache-dir -r /app/requirements.txt && \
    apk --purge del .build-deps


COPY --from=build_shared /build_shared/forward /usr/local/bin/forward

COPY ./docker/start.sh /start.sh
RUN chmod +x /start.sh

COPY ./docker/prestart_core.sh /app/prestart.sh
RUN chmod +x /app/prestart.sh

COPY ./docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

COPY ./docker/gunicorn_conf.py /gunicorn_conf.py

COPY ./src/core/. /app/

RUN chmod +x /app/manage.py && \
    chmod +x /app/db_migration.py

EXPOSE 80

# setup environment variables
ENV PYTHONPATH=/app
ENV MODULE_NAME run
ENV VARIABLE_NAME app
ENV GUNICORN_CMD_ARGS --timeout 120

VOLUME ["/data"]

HEALTHCHECK --interval=5s --timeout=3s --retries=5 CMD curl --fail http://localhost/api/v1/isalive || exit 1

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/start.sh"]
