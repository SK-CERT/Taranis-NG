FROM python:3.13-alpine3.19 AS build_shared

WORKDIR /build_shared/

RUN pip install --no-cache-dir build
COPY ./src/shared/. .
RUN python -m build



FROM python:3.13-alpine3.19 AS production

WORKDIR /app/

# upgrade pip
RUN python -m pip install --upgrade pip

# install common packages
RUN \
    apk add --no-cache \
    libpng \
    libjpeg \
    py3-gobject3 \
    pango

# install fonts
RUN \
    apk add --no-cache \
    msttcorefonts-installer \
    fontconfig \
    font-noto \
    font-noto-arabic \
    font-noto-armenian \
    font-noto-bengali \
    font-noto-devanagari \
    font-noto-ethiopic \
    font-noto-extra \
    font-noto-georgian \
    font-noto-hebrew \
    font-noto-kannada \
    font-noto-lao \
    font-noto-malayalam \
    font-noto-myanmar \
    font-noto-tamil \
    font-noto-thai \
    font-noto-tibetan \
    terminus-font \
    ttf-opensans \
    font-bakoma \
    font-misc-misc \
    font-croscore \
    freetype && \
    fc-cache -f && \
    update-ms-fonts && \
    rm -rf /var/cache/*

# install "shared" package from build_shared stage
# TODO: somehow squash the following two layers into one to conserve space

COPY --from=build_shared /build_shared/dist/taranis_ng_shared-*.whl custom_packages/
RUN pip install --no-cache-dir ./custom_packages/taranis_ng_shared-*.whl && rm -rf ./custom_packages/

# install dependencies

COPY ./src/presenters/requirements.txt /app/requirements.txt
RUN \
    apk add --no-cache --virtual .build-deps \
    gcc \
    g++ \
    make \
    musl-dev \
    python3-dev \
    libffi-dev && \
    pip install --no-cache-dir -r /app/requirements.txt && \
    apk --purge del .build-deps

COPY ./docker/start.sh /start.sh
RUN chmod +x /start.sh

COPY ./docker/prestart.sh /app/prestart.sh
RUN chmod +x /app/prestart.sh

COPY ./docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

COPY ./docker/gunicorn_conf.py /gunicorn_conf.py

COPY ./src/presenters/. /app/

EXPOSE 80

# setup environment variables
ENV PYTHONPATH=/app
ENV MODULE_NAME run
ENV VARIABLE_NAME app
ENV GUNICORN_CMD_ARGS --timeout 120


VOLUME ["/app/templates"]

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/start.sh"]
